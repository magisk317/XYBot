name: 创建并发布Docker镜像

# 配置此工作流每次向名为 `release` 的分支推送更改时运行。
on:
  push:
    branches: ['release']

# 定义两个自定义环境变量，用于容器注册表域名和此工作流构建的Docker镜像名称。
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: magisk317/xybot/xybot
  CUSTOM_TAG: v2.1.1  # 这里可以手动修改自定义标签


# 此工作流中有一个作业。它配置为在最新版本的Ubuntu上运行。
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # 设置授予 `GITHUB_TOKEN` 的权限，用于此作业中的操作。
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      # 使用 `docker/login-action` 动作登录到容器注册表，使用将发布包的帐户和密码。发布后，包将归于此处定义的帐户。
      - name: 登录到容器注册表
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PASSWORD }}

      # 显式构建Docker镜像
      - name: 构建Docker镜像
        id: build
        run: |
          docker build -f Docker/Dockerfile -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest .
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.CUSTOM_TAG }}
          echo "::set-output name=digest::$(docker inspect --format='{{index .RepoDigests 0}}' ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest)"

      # 推送Docker镜像
      - name: 推送Docker镜像
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.CUSTOM_TAG }}

      # 此步骤生成镜像的工件证明，这是一个关于镜像在哪里和如何构建的不可伪造声明。它增加了消费镜像的人的供应链安全性。有关更多信息，请参阅 “[使用工件证明建立构建来源](/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds)”。
      - name: 生成工件证明
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
